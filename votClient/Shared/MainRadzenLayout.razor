@using CommonBase.Services.AuthService;
@using Microsoft.AspNetCore.Components.Authorization;
@using votClient.Shared.Components;
@using CommonBase.Shared.Services;
@using PSC.Blazor.Components.BrowserDetect
@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject AuthService AuthService;

<RadzenLayout style="height: 99vh">
    <RadzenHeader>

       
       
        <RadzenRow >
            <RadzenColumn >
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
                    <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
                    <RadzenLabel Text="POS Pymes" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn >
                <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.End" Gap="0" >
                    <RadzenButton Style="margin-right: 10px; margin-top: 5px;" 
                    Click=@(args => LogoutClick()) 
                    Icon="exit_to_app" 
                    ButtonStyle="ButtonStyle.Primary" />
                </RadzenStack>
            </RadzenColumn>
          
        </RadzenRow>
        
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        <RadzenPanelMenu>
            <RadzenPanelMenuItem Text="Inicio" Icon="home" Path="home" Click="@(() =>ShowOrHideMenu())" />
            <RadzenPanelMenuItem Text="Cat.Productos" Icon="done_all" Path="productcategory" Click="@(() => ShowOrHideMenu())" />
            <RadzenPanelMenuItem Text="Unidades medida" Icon="assessment" Path="unidadmedidalist" Click="@(() => ShowOrHideMenu())" />
            <RadzenPanelMenuItem Text="Productos" Icon="description" Path="productoslist" Click="@(() => ShowOrHideMenu())" />
            <RadzenPanelMenuItem Text="Clientes" Icon="account_circle" Path="terceros/CLIENTE" Click="@(() => ShowOrHideMenu())" />
            <RadzenPanelMenuItem Text="Proveedores" Icon="assignment_ind" Path="terceros/PROVEEDOR" Click="@(() => ShowOrHideMenu())" />
            <RadzenPanelMenuItem Text="Salir" Icon="exit_to_app" Click="@(()=>LogoutClick())" />
        </RadzenPanelMenu>
       
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
   
</RadzenLayout>
<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />

<BrowserDetect @bind-BrowserInfo="@Info"
               OSArchitectureUpdate="OSArchitectureString"
               OSVersionUpdate="OSUpdateString" />

@code {
    public BrowserInfo? Info { get; set; }
    public string? OSInfo { get; set; } = "";
    public string? OSCPUInfoString { get; set; }
    bool sidebar1Expanded = true;

    async Task LogoutClick()
    {
        await AuthService.Logout();
        navigationManager.NavigateTo("/login");
    }

    private void OSArchitectureString(string cpu)
    {
        OSCPUInfoString = cpu;
    }

    private void OSUpdateString(string version)
    {
        OSInfo = version;
    }

    private bool ShowOrHideMenu()
    {
        if((bool)Info.IsMobile)
            return sidebar1Expanded = !sidebar1Expanded;
        return false;
    }
}