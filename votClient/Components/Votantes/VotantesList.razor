@using votClient.Models;
@using votClient.Services.Votantes;
@inject IVotantesService votantesService

<PageTitle>Votantes</PageTitle>

<h1>Votantes</h1>

<p>En esta pagina puedes almacenar los datos de los Votantes.</p>

@if (votantes == null)
{
    <p><em>Loading...</em></p>
}
else
{@*
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@lideres" TItem="Lider" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="Lider" Property="id" Filterable="false" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="Lider" Property="nombre" Title="Nombre" Frozen="true" Width="160px" />
            <RadzenDataGridColumn TItem="Lider" Property="cedula" Title="Cedula" Width="160px" />
            <RadzenDataGridColumn TItem="Lider" Property="telefono" Title="Telefono" Width="200px" />
            <RadzenDataGridColumn TItem="Lider" Property="referido" Title="Referido" Width="120px" />
        </Columns>
    </RadzenDataGrid>*@


    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Class="rz-p-2">
        <RadzenCheckBox @bind-Value="@allowVirtualization" Name="allowVirtualization" />
        <RadzenLabel Text="Permitir virtualización" Component="allowVirtualization" />
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.End" Gap="1rem" Wrap="FlexWrap.Wrap">
        <RadzenButton Text="Nuevo" Icon="add" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Large" Click="@IrANuevo" />
    </RadzenStack>

    <RadzenDataList AllowVirtualization=@allowVirtualization Style="@(allowVirtualization ? "height:400px;overflow:auto;" : "")"
                WrapItems="@(!allowVirtualization)" AllowPaging="@(!allowVirtualization)"
                Data="@votantes" TItem="Votante" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
        <Template Context="Votante">
            <RadzenCard Style="width: 100%; padding: 0;">
                <RadzenRow Gap="0">
                    <RadzenColumn Size="12" SizeLG="3" Class="rz-p-4 product-title">
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-secondary">@(Votante.Nombre)</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeLG="7" Class="rz-p-4">
                            <RadzenRow Gap="0">
                                <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Cedula</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Body2">@(Votante.Cedula)</RadzenText>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Telefono</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Body2">@(Votante.Telefono)</RadzenText>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="6" SizeLG="4">
                                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">E-mail</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Body2">@(Votante.Email)</RadzenText>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
                                    <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Shade="Shade.Lighter" class="price-badge" Text="@(Votante.NombrePuesto.ToString())" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Mesa</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Body2">@(Votante.Mesa)</RadzenText>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="6" SizeLG="3" Class="rz-text-align-start rz-text-align-lg-start">
                                    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Lider</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Body2">@(Votante.NombreLider)</RadzenText>
                                    
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeLG="2" Class="rz-p-4">
                            <RadzenRow Gap="0">
                                <RadzenColumn Size="12" SizeMD="8" SizeLG="8">
                                    <RadzenButton Text="Editar" Style="width: 100%" Click="@(()=> EditarLider(Votante.Id))" />
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8" SizeLG="8">
                                    <RadzenButton Text="Eliminar" Style="width: 100%" Click="@(()=> DeteteLider(Votante.Id))" ButtonStyle="ButtonStyle.Danger" />
                                </RadzenColumn>
                            </RadzenRow>


                        </RadzenColumn>
                    </RadzenRow>
                </RadzenCard>
            </Template>
        </RadzenDataList>
}

<style>
    .product-title {
        min-height: 72px;
        background-color: var(--rz-secondary-lighter);
    }

    .price-badge {
        font-size: 16px;
        font-weight: bold;
        line-height: 20px;
        padding: 8px;
    }
</style>


@code {
    bool allowVirtualization;
    private Votante[]? votantes;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            await LoadData();
        }
        catch (Exception ex)
        {
            AppUtils.ShowNotify(ex.Message, "ERROR", Ns);
        }
    }

    public async void DeteteLider(int id)
    {
        var result = await AppUtils.ShowConfirm("Eliminar votante", "Está seguro de querer eliminar este votante?", DialogService);
        //AppUtils.ShowAlert("Eliminar líder", "Esta seguro de querer eliminar este líder?", DialogService);
        if ((bool)result)
        {
            var response = await votantesService.Delete(id);
            await LoadData();
            StateHasChanged();
            AppUtils.ShowNotify("Votante Eliminado exitosamente", "OK", Ns);
            return;
        }
    }

    public async void EditarLider(int id)
    {
        Navigation.NavigateTo($"votantesnew/{id}");
    }

    public void IrANuevo()
    {
        Navigation.NavigateTo("votantesnew");
    }
    public async Task LoadData()
    {
        votantes = await votantesService.GetAll();
    }

}
