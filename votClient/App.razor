@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Services;
@using votClient.Components.Login
@inject LazyAssemblyLoader AssemblyLoader
@inject ILogger<App> Logger
<Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="@OnNavigateAsync">
    <Found Context="routeData">
       @* <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />*@
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" >
            <NotAuthorized >
                  <RedirectToLogin></RedirectToLogin>
            </NotAuthorized>
            <Authorizing>
               
            </Authorizing>  

        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code{
    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            if (args.Path.Contains("lideres"))
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(
                    new[] { "CommonComponents.dll" });
            }
            if (args.Path.Contains("votantes"))
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(
                    new[] { "CommonVotantesComponents.dll" });
            }
        }
        catch (Exception ex)
        {
            Logger.LogError("Error: {Message}", ex.Message);
        }
    }
}