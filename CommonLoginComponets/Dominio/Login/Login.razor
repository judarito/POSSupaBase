@using CommonBase.Services.AuthService;
@using Microsoft.AspNetCore.Components.Authorization
@using CommonBase.Models.Login;
@using CommonBase.Shared.Services;
@inject AuthService AuthService
@inject NavigationManager Navigation



<RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
    <RadzenTemplateForm Data=@("SimpleLogin")>
        <RadzenLogin AllowRegister="false" AllowResetPassword="false" Username=@userName Password=@password
                     AllowRememberMe="false" RememberMe="@rememberMe"
                     Login=@(args => OnLogin(args, "Login with default values")) />
    </RadzenTemplateForm>
</RadzenCard>



@code {
    string userName = "";
    string password = "";
    bool rememberMe = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        userName = "";
        password = "";
    }



    async void OnLogin(LoginArgs args, string name)
    {
        spinnerService.Show();
        try
        {
            await AuthService.Login(args.Username, args.Password);
            Navigation.NavigateTo($"/home");
        }
        catch (Exception ex)
        {
            AppUtils.ShowNotify(ex.Message, "ERROR", Ns);
        }
        finally
        {
            spinnerService.Hide();
        }

    }

    void OnRegister(string name)
    {
        Console.WriteLine($"{name} -> Register");
    }

    void OnResetPassword(string value, string name)
    {
        Console.WriteLine($"{name} -> ResetPassword for user: {value}");
    }
}